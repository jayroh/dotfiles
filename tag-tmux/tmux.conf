# Smart pane switching with awareness of Vim splits. - Thanks CHRIS TOOMEY!
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# use C-Space as prefix. Leave C-a alone
unbind C-b
set -g prefix C-Space

set -g default-terminal "xterm-256color"
setw -g xterm-keys on

# Set the base index for windows to 1 instead of 0
set -g base-index 1

# Set the base index for panes to 1 instead of 0
setw -g pane-base-index 1

# Use vim keybindings in copy mode
setw -g mode-keys vi

setw -g monitor-activity on

# Split windows with "|" and "-"
bind | split-window -h
bind - split-window -v

# Stay in the same directory when split panes.
# http://qiita.com/okuramasafumi/items/72f61ec0af56b7b9b292
unbind %
bind-key % split-window -h -c "#{pane_current_path}"
unbind '"'
bind-key '"' split-window -v -c "#{pane_current_path}"

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Sane scrolling
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
# Larger scrollback buffer
set-option -g history-limit 100000

# Turn Mouse on
setw -g mouse on

# Toggle synchronization of all panes to receive the same input
bind e setw synchronize-panes

# turn window titles on
set-option -g set-titles on

# Reload config
bind r source-file ~/.tmux.conf \; display "reloaded tmux.conf"
bind-key C-r source ~/.tmux.conf \; display "reloaded tmux.conf"
