#!/bin/bash


ZSH_LOCATION=`which zsh`

# LINUX ***********************************************************************
if [[ `uname -s` == "Linux" && ! " $@ " =~ " --skip-apt " ]]; then
  # install dependencies
  while IFS= read -r package
  do
    # Run apt-get install against each package
    sudo apt-get install -y "$package"
  done < "Aptfile"

  if [ -x "$(command -v snap)" ]; then
    < Snapfile.classic xargs sudo snap install --classic
  fi
# MAC *************************************************************************
elif [[ `uname -s` != "Linux" ]]; then
  if [ "$(uname -m 2> /dev/null)" == "arm64" && -f /opt/homebrew/bin/zsh ]; then
    ZSH_LOCATION="/opt/homebrew/bin/zsh"
  elif [ -f /usr/local/bin/zsh ]; then
    ZSH_LOCATION="/usr/local/bin/zsh"
  fi

  # Use homebrew to install packages found in both `./Brewfile` and `~/.Brewfile`
  # A bit redundant since they eventually point to the same file but it's a good
  # way to work in case one doesn't exist
  brew bundle
  brew bundle --file=~/.Brewfile

  # Install command line tools if you haven't already
  xcode-select --install
  # Enable command line tools
  sudo xcode-select --switch /Library/Developer/CommandLineTools
  # Install fonts
  open -b com.apple.FontBook ./misc/*.[ot]tf
fi

echo "Changing shell ..."
chsh -s $ZSH_LOCATION

# Install terminfos
tic -x ~/.dotfiles/misc/tmux.terminfo
tic -x ~/.dotfiles/misc/xterm-256color-italic.terminfo

# Install pure
[ -d "$HOME/.zsh" ] || mkdir -p "$HOME/.zsh"
[ -d "$HOME/.zsh/pure" ] || git clone https://github.com/sindresorhus/pure.git "$HOME/.zsh/pure"

# Install asdf
[ -d "$HOME/.asdf" ] || git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.10.2
[ $SHELL == "/bin/bash" ] && source ~/.bashrc
[ $SHELL == "$ZSH_LOCATION" ] && source ~/.zshrc

rcup -x setup -t ruby -t bash -t node -t ansible -t git -t nvim -t rspec -t tmux -t zsh

echo "Installing all needed asdf plugins ..."
asdf plugin add golang
asdf plugin add nodejs
asdf plugin add python
asdf plugin add ruby
asdf plugin add rust
asdf plugin add neovim

echo "💎 Installing ruby ..."
asdf install ruby latest
asdf global ruby latest

echo "☕ Installing nodejs ..."
asdf install nodejs latest
asdf global nodejs latest

echo "📝 Installing neovim ..."
asdf install neovim latest
asdf global neovim latest

echo "⚠️  Now install other languages with 'asdf install [lang] latest'..."

# Install vim-plug
[ -f ~/.local/share/nvim/site/autoload/plug.vim ] || curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \
  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

# Python stuff

## Python 3
if [ -x "$(command -v python3)" ]; then
  # Test if the neovim pip3 module is installed
  python3 -c "import neovim" >& /dev/null

  # If not, install it
  if [ "${?}" == "1" ]; then
    # If this doesn't work, see:
    # http://stackoverflow.com/questions/20082935/how-to-install-pip-for-python3-on-mac-os-x
    echo "Installing NeoVim pip3 module."
    command -v pip3 && pip3 install neovim pynvim
  fi

## Python 2
elif [ -x "$(command -v python2)" ]; then
  # Test if the neovim pip2 module is installed
  python2 -c "import neovim" >& /dev/null

  # If not, install it
  if [ "${?}" == "1" ]; then
    # If this doesn't work, see:
    # http://stackoverflow.com/questions/20082935/how-to-install-pip-for-python3-on-mac-os-x
    echo "Installing NeoVim pip2 module."
    command -v pip2 && pip2 install neovim pynvim
  fi

## Vanilla Python
elif [ -x "$(command -v python)" ]; then
  # Test if the neovim pip2 module is installed
  python -c "import neovim" >& /dev/null

  # If not, install it
  if [ "${?}" == "1" ]; then
    # If this doesn't work, see:
    # http://stackoverflow.com/questions/20082935/how-to-install-pip-for-python3-on-mac-os-x
    echo "Installing NeoVim pip module."
    command -v pip && pip install neovim pynvim
  fi
fi

# install plug vim plugin if it's not there already
if [ ! -e ~/.config/nvim/autoload/plug.vim ]; then
  echo "Installing plug.vim."
  curl -fLo ~/.config/nvim/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
fi

echo "Setup complete."
echo ""
echo "Run the following to get vim situated:"
echo ""
echo "$ nvim +'PlugInstall --sync' +qa"
echo ""
echo "And (if you're on a Mac) set iTerm's font to 'MesloLGS NF'"
echo ""
